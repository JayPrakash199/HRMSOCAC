//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebServices.LibraryMgmtReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LibraryMgmt_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt")]
    public partial class LibraryMgmt : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AccessionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccessionPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback Book_IssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback Book_RenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Book_ReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBookBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItemJournalBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItemUploadOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LibraryMgmt() {
            this.Url = global::WebServices.Properties.Settings.Default.WebServices_LibraryMgmtReference_LibraryMgmt;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AccessionListCompletedEventHandler AccessionListCompleted;
        
        /// <remarks/>
        public event AccessionPostCompletedEventHandler AccessionPostCompleted;
        
        /// <remarks/>
        public event Book_IssueCompletedEventHandler Book_IssueCompleted;
        
        /// <remarks/>
        public event Book_RenewalCompletedEventHandler Book_RenewalCompleted;
        
        /// <remarks/>
        public event Book_ReturnCompletedEventHandler Book_ReturnCompleted;
        
        /// <remarks/>
        public event CreateBookBatchCompletedEventHandler CreateBookBatchCompleted;
        
        /// <remarks/>
        public event ItemJournalBookCompletedEventHandler ItemJournalBookCompleted;
        
        /// <remarks/>
        public event ItemUploadCompletedEventHandler ItemUploadCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:AccessionList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="AccessionList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AccessionList(string bookNo) {
            this.Invoke("AccessionList", new object[] {
                        bookNo});
        }
        
        /// <remarks/>
        public void AccessionListAsync(string bookNo) {
            this.AccessionListAsync(bookNo, null);
        }
        
        /// <remarks/>
        public void AccessionListAsync(string bookNo, object userState) {
            if ((this.AccessionListOperationCompleted == null)) {
                this.AccessionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccessionListOperationCompleted);
            }
            this.InvokeAsync("AccessionList", new object[] {
                        bookNo}, this.AccessionListOperationCompleted, userState);
        }
        
        private void OnAccessionListOperationCompleted(object arg) {
            if ((this.AccessionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccessionListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:AccessionPost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="AccessionPost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AccessionPost(string bookNo, int lineNo) {
            this.Invoke("AccessionPost", new object[] {
                        bookNo,
                        lineNo});
        }
        
        /// <remarks/>
        public void AccessionPostAsync(string bookNo, int lineNo) {
            this.AccessionPostAsync(bookNo, lineNo, null);
        }
        
        /// <remarks/>
        public void AccessionPostAsync(string bookNo, int lineNo, object userState) {
            if ((this.AccessionPostOperationCompleted == null)) {
                this.AccessionPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccessionPostOperationCompleted);
            }
            this.InvokeAsync("AccessionPost", new object[] {
                        bookNo,
                        lineNo}, this.AccessionPostOperationCompleted, userState);
        }
        
        private void OnAccessionPostOperationCompleted(object arg) {
            if ((this.AccessionPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccessionPostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:Book_Issue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="Book_Issue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Book_Issue(string entryNo) {
            this.Invoke("Book_Issue", new object[] {
                        entryNo});
        }
        
        /// <remarks/>
        public void Book_IssueAsync(string entryNo) {
            this.Book_IssueAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void Book_IssueAsync(string entryNo, object userState) {
            if ((this.Book_IssueOperationCompleted == null)) {
                this.Book_IssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBook_IssueOperationCompleted);
            }
            this.InvokeAsync("Book_Issue", new object[] {
                        entryNo}, this.Book_IssueOperationCompleted, userState);
        }
        
        private void OnBook_IssueOperationCompleted(object arg) {
            if ((this.Book_IssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Book_IssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:Book_Renewal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="Book_Renewal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Book_Renewal(string entryNo) {
            this.Invoke("Book_Renewal", new object[] {
                        entryNo});
        }
        
        /// <remarks/>
        public void Book_RenewalAsync(string entryNo) {
            this.Book_RenewalAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void Book_RenewalAsync(string entryNo, object userState) {
            if ((this.Book_RenewalOperationCompleted == null)) {
                this.Book_RenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBook_RenewalOperationCompleted);
            }
            this.InvokeAsync("Book_Renewal", new object[] {
                        entryNo}, this.Book_RenewalOperationCompleted, userState);
        }
        
        private void OnBook_RenewalOperationCompleted(object arg) {
            if ((this.Book_RenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Book_RenewalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:Book_Return", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="Book_Return_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Book_Return(string entryNo) {
            this.Invoke("Book_Return", new object[] {
                        entryNo});
        }
        
        /// <remarks/>
        public void Book_ReturnAsync(string entryNo) {
            this.Book_ReturnAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void Book_ReturnAsync(string entryNo, object userState) {
            if ((this.Book_ReturnOperationCompleted == null)) {
                this.Book_ReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBook_ReturnOperationCompleted);
            }
            this.InvokeAsync("Book_Return", new object[] {
                        entryNo}, this.Book_ReturnOperationCompleted, userState);
        }
        
        private void OnBook_ReturnOperationCompleted(object arg) {
            if ((this.Book_ReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Book_ReturnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:CreateBookBatch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="CreateBookBatch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateBookBatch(string itemCategory) {
            this.Invoke("CreateBookBatch", new object[] {
                        itemCategory});
        }
        
        /// <remarks/>
        public void CreateBookBatchAsync(string itemCategory) {
            this.CreateBookBatchAsync(itemCategory, null);
        }
        
        /// <remarks/>
        public void CreateBookBatchAsync(string itemCategory, object userState) {
            if ((this.CreateBookBatchOperationCompleted == null)) {
                this.CreateBookBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBookBatchOperationCompleted);
            }
            this.InvokeAsync("CreateBookBatch", new object[] {
                        itemCategory}, this.CreateBookBatchOperationCompleted, userState);
        }
        
        private void OnCreateBookBatchOperationCompleted(object arg) {
            if ((this.CreateBookBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBookBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:ItemJournalBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="ItemJournalBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ItemJournalBook(string fileName) {
            this.Invoke("ItemJournalBook", new object[] {
                        fileName});
        }
        
        /// <remarks/>
        public void ItemJournalBookAsync(string fileName) {
            this.ItemJournalBookAsync(fileName, null);
        }
        
        /// <remarks/>
        public void ItemJournalBookAsync(string fileName, object userState) {
            if ((this.ItemJournalBookOperationCompleted == null)) {
                this.ItemJournalBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemJournalBookOperationCompleted);
            }
            this.InvokeAsync("ItemJournalBook", new object[] {
                        fileName}, this.ItemJournalBookOperationCompleted, userState);
        }
        
        private void OnItemJournalBookOperationCompleted(object arg) {
            if ((this.ItemJournalBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemJournalBookCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt:ItemUpload", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", ResponseElementName="ItemUpload_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/LibraryMgmt", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ItemUpload(string fileName) {
            this.Invoke("ItemUpload", new object[] {
                        fileName});
        }
        
        /// <remarks/>
        public void ItemUploadAsync(string fileName) {
            this.ItemUploadAsync(fileName, null);
        }
        
        /// <remarks/>
        public void ItemUploadAsync(string fileName, object userState) {
            if ((this.ItemUploadOperationCompleted == null)) {
                this.ItemUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItemUploadOperationCompleted);
            }
            this.InvokeAsync("ItemUpload", new object[] {
                        fileName}, this.ItemUploadOperationCompleted, userState);
        }
        
        private void OnItemUploadOperationCompleted(object arg) {
            if ((this.ItemUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItemUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccessionListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccessionPostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Book_IssueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Book_RenewalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Book_ReturnCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateBookBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ItemJournalBookCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ItemUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591